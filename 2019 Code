/*----------------------------------------------------------------------------*/
/* Copyright (c) 2017-2018 FIRST. All Rights Reserved.                        */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

#include <frc/Joystick.h>
#include <frc/PWMVictorSPX.h>
#include <frc/TimedRobot.h>
#include <frc/drive/DifferentialDrive.h>

using namespace frc;
/**
 * This is a demo program showing the use of the DifferentialDrive class.
 * Runs the motors with arcade steering.
 */
class Robot : public frc::TimedRobot {
  //PWMVictorSPX m_0a{0};
  //PWMVictorSPX m_0b{1};
  //PWMVictorSPX m_1a{2};
  //PWMVictorSPX m_1b{3};
  PWMVictorSPX m_0{0};
  PWMVictorSPX m_1{1};
  DifferentialDrive m_robotDrive{m_0, m_1};
  Joystick gamePad{0};

 public:
  void TeleopPeriodic() {
    // Drive with arcade style
    double LX, LY, LTrigger, RTrigger, RX, RY, AButton, BButton, XButton, YButton, RTriggerButton, LTriggerButton, Back, Start, LStick, RStick;
    //Axis
    LX = gamePad.GetRawAxis(0);
    LY = gamePad.GetRawAxis(1);
    LTrigger = gamePad.GetRawAxis(2);
    RTrigger = gamePad.GetRawAxis(3);
    RX = gamePad.GetRawAxis(4);
    RY = gamePad.GetRawAxis(5);
    //Buttons
    AButton = gamePad.GetRawButton(0);
    BButton = gamePad.GetRawButton(1);
    XButton = gamePad.GetRawButton(2);
    YButton = gamePad.GetRawButton(3);
    RTriggerButton = gamePad.GetRawButton(4);
    LTriggerButton = gamePad.GetRawButton(5);
    Back = gamePad.GetRawButton(6);
    Start = gamePad.GetRawButton(7);
    LStick = gamePad.GetRawButton(8);
    RStick = gamePad.GetRawButton(9);

    m_robotDrive.ArcadeDrive(LX, LY);

  }
};

#ifndef RUNNING_FRC_TESTS
int main() { return frc::StartRobot<Robot>(); }
#endif
